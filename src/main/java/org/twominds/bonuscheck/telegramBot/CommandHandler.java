package org.twominds.bonuscheck.telegramBot;

import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.twominds.bonuscheck.core.services.SellerService;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

@Component
@RequiredArgsConstructor
public class CommandHandler {

    private final SellerService sellerService;

    public void handleCommand(Long chatId, String command, BonusCheckBot bot) {
        switch (command) {
            case "/start":
                // –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                showMainMenu(chatId, bot);
                break;
            case "/register":
                handleRegistrationCommand(chatId, bot);
                break;
            default:
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
                if (!sellerService.isSellerRegistered(chatId)) {
                    bot.sendTextMessage(chatId, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.");
                    return;
                }

                switch (command) {
                    case "üìä –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å":
                        showBalance(chatId, bot);
                        break;
                    case "üì∑ –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥":
                        initiateQrScanning(chatId, bot);
                        break;
                    default:
                        bot.sendTextMessage(chatId, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.");
                }
        }
    }

    void showMainMenu(Long chatId, BonusCheckBot bot) {
        if (!sellerService.isSellerRegistered(chatId)) {
            InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
            List<List<InlineKeyboardButton>> rows = new ArrayList<>();

            // –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            InlineKeyboardButton registerButton = new InlineKeyboardButton();
            registerButton.setText("üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è");
            registerButton.setCallbackData("REGISTER");

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Ä–∞–∑–º–µ—Ç–∫—É
            rows.add(Collections.singletonList(registerButton));
            markup.setKeyboard(rows);

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
            SendMessage message = new SendMessage();
            message.setChatId(chatId.toString());
            message.setText("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.");
            message.setReplyMarkup(markup);

            try {
                bot.execute(message);
            } catch (TelegramApiException e) {
                e.printStackTrace();
            }
            return;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        InlineKeyboardButton balanceButton = new InlineKeyboardButton();
        balanceButton.setText("üìä –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å");
        balanceButton.setCallbackData("SHOW_BALANCE");

        InlineKeyboardButton scanQrButton = new InlineKeyboardButton();
        scanQrButton.setText("üì∑ –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥ —á–µ—Ä–µ–∑ –≤–µ–±");
        scanQrButton.setUrl("https://yourdomain.com/scanner.html");

        InlineKeyboardButton uploadPhotoButton = new InlineKeyboardButton();
        uploadPhotoButton.setText("üì∑ –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR —á–µ—Ä–µ–∑ —Ñ–æ—Ç–æ");
        uploadPhotoButton.setCallbackData("SCAN_QR_PHOTO");

        rows.add(Collections.singletonList(balanceButton));
        rows.add(Collections.singletonList(scanQrButton));
        rows.add(Collections.singletonList(uploadPhotoButton));
        markup.setKeyboard(rows);

        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ.");
        message.setReplyMarkup(markup);

        try {
            bot.execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }


    private void handleRegistrationCommand(Long chatId, BonusCheckBot bot) {
        if (sellerService.isSellerRegistered(chatId)) {
            bot.sendTextMessage(chatId, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.");
        } else {
            bot.sendTextMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7925******* –∏–ª–∏ 8912*******, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.");
            bot.setUserState(chatId, "AWAITING_PHONE");
        }
    }

    private void showBalance(Long chatId, BonusCheckBot bot) {
        if (sellerService.isSellerRegistered(chatId)) {
            bot.sendTextMessage(chatId, "–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: " + sellerService.getSellerBalance(chatId) + " –±–æ–Ω—É—Å–æ–≤.");
        } else {
            bot.sendTextMessage(chatId, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /register –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.");
        }
    }


    private void initiateQrScanning(Long chatId, BonusCheckBot bot) {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫–∞–Ω–µ—Ä–∞ —á–µ—Ä–µ–∑ –≤–µ–±
        InlineKeyboardButton scanQrButton = new InlineKeyboardButton();
        scanQrButton.setText("–û—Ç–∫—Ä—ã—Ç—å —Å–∫–∞–Ω–µ—Ä QR");
        scanQrButton.setUrl("http://localhost:8080/scanner.html"); // –í–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ —Å–∫–∞–Ω–µ—Ä–æ–º

        // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
        InlineKeyboardButton uploadPhotoButton = new InlineKeyboardButton();
        uploadPhotoButton.setText("–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR —á–µ—Ä–µ–∑ —Ñ–æ—Ç–æ");
        uploadPhotoButton.setCallbackData("SCAN_QR_PHOTO");

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        rows.add(Collections.singletonList(scanQrButton));
        rows.add(Collections.singletonList(uploadPhotoButton));
        markup.setKeyboard(rows);

        SendMessage message = new SendMessage();
        message.setChatId(chatId.toString());
        message.setText("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è QR-–∫–æ–¥–∞.");
        message.setReplyMarkup(markup);

        bot.sendTextMessage(chatId, message.getText());


    }
}

